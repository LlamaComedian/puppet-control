global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  redispatch
    option                  forceclose
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
<% if @lb_instances.length > 0 -%>
<% @lb_instances.each do |name,config| -%>
listen <%= name %> *:<%= config['port'] %>
    balance roundrobin

<% if @sticky == true -%>
    cookie JSESSIONID prefix
    option httpchk GET  <%= config['healthcheck'] %>
<% config['backends'].each do |backend| -%>
    server <%= backend.split(':')[0] %> <%= backend %> cookie check
<% end -%>

<% else -%>
    option httpchk GET <%= config['healthcheck'] %>
<% config['backends'].each do |backend| -%>
<% if config.key?('healthcheck_port') -%>
    # Backend <%= backend %> with healthcheck at <%= backend.split(':')[0] %>:<%= config['healthcheck_port'] %>
    server <%= backend.split(':')[0] %> <%= backend %> check port <%= config['healthcheck_port'] %>
<% else -%>
    # Backend <%= backend %> with native healthcheck
    server <%= backend.split(':')[0] %> <%= backend %> check

    <% if @users -%>
    acl AuthOkay_Ops http_auth(UsersFor_Ops)
    http-request auth realm MyAuthRealm if !AuthOkay_Ops
    <% end -%>
<% end -%>
<% end -%>
<% end -%>

<% end -%>
<% end -%>

<% if @users -%>
userlist UsersFor_Ops
  group AdminGroup users <% @users.each do |name,password| -%><%=name%>,<% end -%>

  <% @users.each do |name,password| -%>
  user <%=name%> password <%=password%>
  <% end -%>
<% end -%>
