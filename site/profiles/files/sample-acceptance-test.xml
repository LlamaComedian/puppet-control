<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>An example of how to construct a Jenkins job to run and report on your acceptance tests. You&apos;ll need to have deployed to your integration server and started the application prior to running this job. How you would deploy depends on how you have implemented your solution.</description>
  <displayName>Sample Acceptance Test job</displayName>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Install specific gems as detailed in the Gemfile for your application.
bundle install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Set up any application/environment variables you need to enable the tests to run.
# For example, URL to access the running application.

export APPLICATION_ENVIRONMENT_VARIABLE = &apos;Value&apos;

# Change to the top level directory that holds your tests, if you need to.

cd acceptance-tests

# Start testing - this example shows a number of commonly used options.
# The &apos;format&apos; option is used to specify the output format, in this case, in JUnit XML format
# for interpretation by the reporting step, executed in the Post Build Action step below,
# and a &apos;pretty&apos; format that can be seen in the job console output.
# The &apos;out&apos; option specifies where the output files are to go.

cucumber --format junit --out $WORKSPACE/results/ --format pretty</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>